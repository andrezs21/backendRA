# Generated by Django 5.1.7 on 2025-04-26 09:36

import administracion.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(choices=[('SUPERADMIN', 'Super Administrador'), ('ADMIN', 'Administrador de Complejo'), ('CONSERJE', 'Conserje'), ('RESIDENTE', 'Residente')], max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rut', models.CharField(help_text='Formato: 12.345.678-9 o 12.345.678-K', max_length=13, unique=True, validators=[administracion.validators.validar_rut])),
                ('telefono', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('rol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='usuarios', to='administracion.rol')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
        migrations.CreateModel(
            name='ComplejoHabitacional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('direccion', models.TextField()),
                ('telefono', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('activo', models.BooleanField(default=True)),
                ('administrador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complejos_administrados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Complejo Habitacional',
                'verbose_name_plural': 'Complejos Habitacionales',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionMulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dias_tolerancia', models.IntegerField(default=0, help_text='Días de gracia antes de aplicar multa')),
                ('porcentaje_multa_diaria', models.DecimalField(decimal_places=2, help_text='Porcentaje de multa por día de atraso', max_digits=5)),
                ('monto_minimo_multa', models.DecimalField(decimal_places=2, help_text='Monto mínimo de multa', max_digits=10)),
                ('monto_maximo_multa', models.DecimalField(decimal_places=2, help_text='Monto máximo de multa', max_digits=10)),
                ('activo', models.BooleanField(default=True)),
                ('complejo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configuraciones_multas', to='administracion.complejohabitacional')),
            ],
            options={
                'verbose_name': 'Configuración de Multa',
                'verbose_name_plural': 'Configuraciones de Multas',
            },
        ),
        migrations.CreateModel(
            name='EspacioComun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True)),
                ('capacidad', models.IntegerField()),
                ('activo', models.BooleanField(default=True)),
                ('complejo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='espacios_comunes', to='administracion.complejohabitacional')),
            ],
            options={
                'verbose_name': 'Espacio Común',
                'verbose_name_plural': 'Espacios Comunes',
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('mensaje', models.TextField()),
                ('tipo', models.CharField(choices=[('INFO', 'Informativa'), ('ALERTA', 'Alerta'), ('URGENTE', 'Urgente')], default='INFO', max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_publicacion', models.DateTimeField()),
                ('complejo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to='administracion.complejohabitacional')),
                ('creador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones_creadas', to=settings.AUTH_USER_MODEL)),
                ('destinatarios', models.ManyToManyField(related_name='notificaciones_recibidas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'ordering': ['-fecha_publicacion'],
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_vencimiento', models.DateField()),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('PAGADO', 'Pagado'), ('CANCELADO', 'Cancelado')], default='PENDIENTE', max_length=20)),
                ('monto_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
            },
        ),
        migrations.CreateModel(
            name='PagoDetalle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concepto', models.CharField(max_length=100)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fecha_vencimiento', models.DateField()),
                ('multa', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('dias_atraso', models.IntegerField(default=0)),
                ('fecha_pago', models.DateField(blank=True, null=True)),
                ('pago', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='administracion.pago')),
            ],
            options={
                'verbose_name': 'Detalle de Pago',
                'verbose_name_plural': 'Detalles de Pago',
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('CONFIRMADA', 'Confirmada'), ('CANCELADA', 'Cancelada')], default='PENDIENTE', max_length=20)),
                ('observaciones', models.TextField(blank=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
            },
        ),
        migrations.CreateModel(
            name='ReservaDetalle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField()),
                ('fecha_fin', models.DateTimeField()),
                ('cantidad_personas', models.IntegerField()),
                ('espacio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='administracion.espaciocomun')),
                ('reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='administracion.reserva')),
            ],
            options={
                'verbose_name': 'Detalle de Reserva',
                'verbose_name_plural': 'Detalles de Reserva',
            },
        ),
        migrations.CreateModel(
            name='UnidadHabitacional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=10)),
                ('tipo', models.CharField(max_length=50)),
                ('metros_cuadrados', models.DecimalField(decimal_places=2, max_digits=6)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('activo', models.BooleanField(default=True)),
                ('complejo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unidades', to='administracion.complejohabitacional')),
            ],
            options={
                'verbose_name': 'Unidad Habitacional',
                'verbose_name_plural': 'Unidades Habitacionales',
                'unique_together': {('numero', 'complejo')},
            },
        ),
        migrations.AddField(
            model_name='usuario',
            name='unidad_habitacional',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='residentes', to='administracion.unidadhabitacional'),
        ),
        migrations.CreateModel(
            name='WhiteList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente de registro'), ('REGISTRADO', 'Cuenta creada')], default='PENDIENTE', max_length=20)),
                ('complejo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='whitelist', to='administracion.complejohabitacional')),
            ],
            options={
                'verbose_name': 'Email Autorizado',
                'verbose_name_plural': 'Emails Autorizados',
            },
        ),
    ]
